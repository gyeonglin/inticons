{"version":3,"file":"js/226.723b7b46.js","mappings":"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","sources":["webpack://inticons-docs/../node_modules/prismjs/prism.js","webpack://inticons-docs/../node_modules/marked/lib/marked.esm.js","webpack://inticons-docs/./src/assets/README.md","webpack://inticons-docs/./src/views/UsageView.vue","webpack://inticons-docs/./src/views/UsageView.vue?649e"],"sourcesContent":["\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text, [])\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        token.type = 'paragraph';\n        token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.tokens = [];\n        this.lexer.inline(token.text, token.tokens);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = [];\n          this.lexer.inline(item.header[j].text, item.header[j].tokens);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = [];\n            this.lexer.inline(row[k].text, row[k].tokens);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const token = {\n        type: 'paragraph',\n        raw: cap[0],\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      const token = {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = src.slice(1, lLength + match.index + rLength);\n          return {\n            type: 'em',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = src.slice(2, lLength + match.index + rLength - 1);\n        return {\n          type: 'strong',\n          raw: src.slice(0, lLength + match.index + rLength + 1),\n          text,\n          tokens: this.lexer.inlineTokens(text, [])\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2], [])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\ninline.escapedEmSt = /\\\\\\*|\\\\_/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens) {\n    this.inlineQueue.push({ src, tokens });\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const opts = merge({}, ...args);\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n  let hasExtensions;\n\n  args.forEach((pack) => {\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      hasExtensions = true;\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        pack.walkTokens.call(this, token);\n        if (walkTokens) {\n          walkTokens.call(this, token);\n        }\n      };\n    }\n\n    if (hasExtensions) {\n      opts.extensions = extensions;\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  for (const token of tokens) {\n    callback.call(marked, token);\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          marked.walkTokens(cell.tokens, callback);\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            marked.walkTokens(cell.tokens, callback);\n          }\n        }\n        break;\n      }\n      case 'list': {\n        marked.walkTokens(token.items, callback);\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            marked.walkTokens(token[childTokens], callback);\n          });\n        } else if (token.tokens) {\n          marked.walkTokens(token.tokens, callback);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","export default \"<p align=\\\"center\\\">\\n  <a href=\\\"https://github.com/medistream-team/inticons\\\" target=\\\"_blank\\\">\\n  <img alt=\\\"IntIcons\\\" src=\\\"https://github.com/medistream-team/inticons/raw/main/docs/src/assets/images/og.png\\\" width=\\\"540\\\" />\\n  </a>\\n</p>\\n<p align=\\\"center\\\">\\n  <img alt=\\\"Version\\\" src=\\\"https://img.shields.io/npm/v/inticons?color=blue\\\" />\\n  <a href=\\\"#\\\" target=\\\"_blank\\\">\\n    <img alt=\\\"License: MIT\\\" src=\\\"https://img.shields.io/badge/License-MIT-yellow.svg\\\" />\\n  </a>\\n</p>\\n\\n## Install\\n\\n```sh\\nnpm install inticons\\n```\\n\\n## Usage\\n\\n### Import\\n\\n#### CSS\\n\\n```css\\n@import url('inticons/fonts/inticons.bundle.min.css');\\n```\\n\\n#### Vue\\n\\n```html\\n<script>\\n  import 'inticons/fonts/inticons.bundle.min.css';\\n\\n  export default {\\n    // ...\\n  };\\n</script>\\n```\\n\\n### Component\\n\\nEach icon can be referenced by their name prefixed with `ii-`. For example, You can get the arrow-right icon with using `ii-arrow-right`. You can use `font-size` and `color` properties to change the icon appearance.\\n\\n```html\\n<i class=\\\"ii ii-arrow-right\\\"></i>\\n```\\n\\n### Helper Classes\\n\\nInticons contains many helper classes to quickly modify the look of the icons.\\n\\n#### Rotate\\n\\n- `ii-rotate-45`: Rotate icon 45 Degrees.\\n- `ii-rotate-90`: Rotate icon 90 Degrees.\\n- `ii-rotate-135`: Rotate icon 135 Degrees.\\n- `ii-rotate-180`: Rotate icon 180 Degrees.\\n- `ii-rotate-225`: Rotate icon 225 Degrees.\\n- `ii-rotate-270`: Rotate icon 270 Degrees.\\n- `ii-rotate-315`: Rotate icon 315 Degrees.\\n\\n```html\\n<i class=\\\"ii ii-arrow-right ii-rotate-45\\\"></i>\\n```\\n\\n#### Flip\\n\\n- `ii-flip-h`: Flip icon horizontal.\\n- `ii-flip-v`: Flip icon vertical.\\n\\n```html\\n<i class=\\\"ii ii-arrow-right ii-flip-h\\\"></i>\\n```\\n\\n> `ii-rotate-*` and `ii-flip-*` classes cannot be used on the same element at the same time.\\n\\n#### Size\\n\\n- `ii-2x`: Doubles the size.\\n- `ii-3x`: Triples the size.\\n- `ii-4x`: Quadraples the size.\\n\\n```html\\n<i class=\\\"ii ii-arrow-right ii-4x\\\"></i>\\n```\\n\\n#### Spin\\n\\n- `ii-spin`: Spinning icon.\\n\\n```html\\n<i class=\\\"ii ii-arrow-right ii-spin\\\"></i>\\n```\\n\\n#### Weight\\n\\nSome icons has `ii-weight-600` class, which thicken the icon.\\n\\n- `ii-weight-600`: Thicken the icon.\\n\\n```html\\n<i class=\\\"ii ii-arrow-right ii-weight-600\\\"></i>\\n```\\n\\n## Contributor\\n\\n### 👥 [**INTEGRATION Corp.**](https://github.com/medistream-team)\\n\\n- [garudanish](https://github.com/garudanish)\\n- [HyungwonJang0327](https://github.com/HyungwonJang0327)\\n\\n## 📝 License\\n\\nInticons's code (all files, except fonts and svg icons) is distributed under MIT license.<br>\\nEmbedded fonts and svg icons are distributed under [UI8](https://ui8.net) primary licenses. See icons info on UI8 website for [licensing agreement](https://ui8.net/licensing).\\n\";","<template>\n  <div class=\"usage\">\n    <div class=\"markdown-body\">\n      <div v-html=\"changeMarkdown\"></div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport prism from 'prismjs';\nimport { marked } from 'marked';\n\nimport 'prismjs/themes/prism.min.css';\nimport 'github-markdown-css/github-markdown-light.css';\nimport usage from '../assets/README.md';\n\nconst changeMarkdown = computed(() => {\n  marked.setOptions({\n    renderer: new marked.Renderer(),\n    highlight: (code, lang) => {\n      if (prism.languages[lang]) {\n        return prism.highlight(code, prism.languages[lang], lang);\n      } else {\n        return code;\n      }\n    },\n    langPrefix: 'language-',\n    pedantic: false,\n    gfm: true,\n    breaks: false,\n    sanitize: false,\n    smartLists: true,\n    smartypants: false,\n    xhtml: false,\n    headerIds: false,\n  });\n  return marked.parse(usage);\n});\n</script>\n\n<style scoped lang=\"scss\">\n.usage {\n  max-width: 80%;\n  margin: 0 auto;\n  text-align: left;\n\n  .markdown-body {\n    margin-top: 80px - 24px;\n  }\n}\n</style>\n","import script from \"./UsageView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UsageView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UsageView.vue?vue&type=style&index=0&id=2adb23fb&scoped=true&lang=scss\"\n\nimport exportComponent from \"/Users/yaong/Downloads/_works/inticons/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2adb23fb\"]])\n\nexport default __exports__"],"names":["_self","window","WorkerGlobalScope","self","Prism","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","i","getLanguage","element","m","exec","className","toLowerCase","parentElement","setLanguage","language","RegExp","classList","add","currentScript","document","Error","err","src","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","languages","plain","plaintext","text","txt","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","toArray","all","name","push","callbacks","length","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","match","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","source","currentNode","next","tail","reach","str","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","wrapped","nestedRematch","list","node","newNode","count","array","s","e","tag","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","setTimeout","module","exports","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","string","css","addInlined","addAttribute","clike","javascript","regex","js","Element","matches","msMatchesSelector","webkitMatchesSelector","LOADING_MESSAGE","FAILURE_MESSAGE","status","FAILURE_EMPTY_MESSAGE","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","STATUS_FAILED","SELECTOR","pre","appendChild","createElement","getAttribute","extension","autoloader","loadLanguages","loadFile","range","parseRange","lines","split","start","end","Math","max","min","String","error","fileHighlight","logged","console","warn","arguments","success","xhr","XMLHttpRequest","open","onreadystatechange","responseText","statusText","send","Number","comma","undefined","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","test","unescapeTest","unescape","n","charAt","fromCharCode","parseInt","substring","caret","edit","opt","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","merge","target","splitCells","tableRow","row","offset","escaped","curr","cells","trim","shift","pop","splice","c","invert","l","suffLen","currChar","findClosingBracket","b","level","checkSanitizeDeprecation","repeatString","result","outputLink","cap","link","raw","lexer","title","state","inLink","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","matchIndentInNode","indentInNode","Tokenizer","constructor","options","space","rules","block","newline","codeBlockStyle","fences","heading","trimmed","depth","inline","hr","blockquote","blockTokens","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","loose","items","itemRegex","trimLeft","search","nextBulletRegex","hrRegex","task","checked","trimRight","top","spacers","filter","t","hasMultipleLineBreaks","every","chars","lineBreaks","char","table","item","header","align","rows","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","lex","lastToken","cutSrc","lastParagraphClipped","leading","tabs","repeat","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","body","startatt","listitem","checkbox","tablerow","tablecell","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parser","parseInline","l2","l3","cell","itemBody","renderers","unshift","marked","done","pending","setOptions","use","args","opts","childTokens","hasExtensions","pack","ext","prevRenderer","prop","prevTokenizer","lexInline","changeMarkdown","computed","prism","usage","__exports__"],"sourceRoot":""}